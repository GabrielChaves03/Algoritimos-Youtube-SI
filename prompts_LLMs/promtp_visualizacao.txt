(foram enviados 3 arquivos base dados, dicionario de dados e o relatorio estatistico)

os relatorios foram obtidos a partir desse codigo import pandas as pd
import numpy as np
from datetime import datetime

# 1. Carregar dados
df = pd.read_excel('V√≠deos Mais Assistidos do Youtube (2024).xlsx')

# 2. Limpeza e convers√µes
# Converter published_at para datetime
df['published_at'] = pd.to_datetime(df['published_at'], utc=True)

# Converter duration (ISO 8601) para segundos
def iso_to_seconds(iso_str):
    # Ex: 'PT1M1S', 'PT25S', 'PT2H3M', etc.
    import re
    nums = {'H': 3600, 'M': 60, 'S': 1}
    total = 0
    for amount, unit in re.findall(r"(\d+)([HMS])", iso_str):
        total += int(amount) * nums[unit]
    return total

df['duration_sec'] = df['duration'].apply(iso_to_seconds)

# Definir m√©tricas derivadas
# CTR aproximado: like_count / view_count
# Watch time proxy: duration_sec * view_count (tempo total assistido estimado)
df['ctr'] = df['like_count'] / df['view_count']
df['watch_time_est'] = df['duration_sec'] * df['view_count']

# 3. Estat√≠sticas gerais
def summary_stats(series):
    return {
        'mean': series.mean(),
        'median': series.median(),
        'mode': series.mode().iloc[0] if not series.mode().empty else np.nan,
        'std': series.std(),
        '25%': series.quantile(0.25),
        '75%': series.quantile(0.75)
    }

metrics = ['view_count', 'like_count', 'comment_count', 'duration_sec', 'ctr', 'watch_time_est']
summary = {m: summary_stats(df[m]) for m in metrics}
print("\nResumo Estat√≠stico Geral:")
for m, stats in summary.items():
    print(f"{m}: {stats}")

# 4. CTR m√©dio por tipo de t√≠tulo
# Exemplo de categoriza√ß√£o: presen√ßa de '?' no t√≠tulo

def categorize_title(t):
    if '?' in t:
        return 'Pergunta'
    elif len(t) > 50:
        return 'Longo'
    else:
        return 'Curto'


df['title_type'] = df['title'].apply(categorize_title)
ctr_by_type = df.groupby('title_type')['ctr'].mean()
print("\nCTR m√©dio por tipo de t√≠tulo:")
print(ctr_by_type)

# 5. Watch time m√©dio por tipo de t√≠tulo
wt_by_type = df.groupby('title_type')['watch_time_est'].mean()
print("\nWatch time estimado m√©dio por tipo de t√≠tulo (segundos * views):")
print(wt_by_type)

# 6. Distribui√ß√£o e dispers√£o (desvio padr√£o e quartis)
print("\nDistribui√ß√£o e Dispers√£o das M√©tricas:")
for m in metrics:
    print(f"- {m}: M√©dia={df[m].mean():.2f}, Desvio Padr√£o={df[m].std():.2f}, 25%={df[m].quantile(0.25):.2f}, 75%={df[m].quantile(0.75):.2f}")

# 7. Compara√ß√£o antes/depois da introdu√ß√£o de IA (ex: 30/11/2022)
ai_launch = pd.to_datetime('2022-11-30T00:00:00Z')
before = df[df['published_at'] < ai_launch]
after = df[df['published_at'] >= ai_launch]

print("\nCompara√ß√£o antes/depois da introdu√ß√£o de IA (30/11/2022):")
for m in ['view_count', 'like_count', 'comment_count', 'ctr', 'watch_time_est']:
    print(f"{m}: Antes M√©dia={before[m].mean():.2f}, Depois M√©dia={after[m].mean():.2f}")

quais seriam possiveis graficos para ser produzidos? nao realize apenas me informe 

---
Resposta da IA:

√ìtima pergunta! Abaixo est√° uma lista de gr√°ficos que voc√™ pode gerar a partir dos seus dados, organizados por tipo de an√°lise (com matplotlib, seaborn, plotly, bokeh, etc.).

üìä Estat√≠sticas Descritivas e Distribui√ß√µes
Histograma: distribui√ß√£o de view_count, like_count, ctr, watch_time_est, etc.

Boxplot: dispers√£o com outliers por m√©trica (ideal para compara√ß√µes entre tipos de t√≠tulo).

Violin plot: similar ao boxplot, mas mostra densidade da distribui√ß√£o.

Density plot (KDE): curva de densidade para m√©tricas cont√≠nuas.

üìà Rela√ß√µes Entre M√©tricas
Scatter plot (2D):

view_count vs like_count

ctr vs watch_time_est

duration vs view_count

Scatter plot (3D):

view_count, like_count, duration_sec

Pode ser feito com plotly ou matplotlib 3D

üìÖ An√°lise Temporal
Time series (linha):

Evolu√ß√£o mensal de view_count ou like_count ao longo do tempo.

Barra agrupada:

Compara√ß√£o de m√©dias antes e depois da IA.

üìå An√°lise Categ√≥rica
Barplot:

CTR m√©dio por tipo de t√≠tulo (title_type)

M√©dia de watch_time_est por tipo de t√≠tulo

Treemap (interativo): propor√ß√£o de visualiza√ß√µes por categoria ou t√≠tulo

üîÑ Compara√ß√µes e Correla√ß√µes
Heatmap de correla√ß√£o: entre todas as m√©tricas num√©ricas.

Pairplot (matriz de dispers√£o): rela√ß√µes cruzadas entre todas as vari√°veis cont√≠nuas.

üß† An√°lises Avan√ßadas (opcional)
Word cloud: termos mais frequentes nos t√≠tulos virais.

3D PCA ou t-SNE: proje√ß√£o de alta dimensionalidade em 3D para padr√µes visuais.

---

